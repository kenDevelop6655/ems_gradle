package com.example.ems_gradle.infra.mbgModel.ems;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class OperationToManageExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ems.operation_to_manage
     *
     * @mbg.generated Sat Aug 12 10:45:47 JST 2023
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ems.operation_to_manage
     *
     * @mbg.generated Sat Aug 12 10:45:47 JST 2023
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ems.operation_to_manage
     *
     * @mbg.generated Sat Aug 12 10:45:47 JST 2023
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ems.operation_to_manage
     *
     * @mbg.generated Sat Aug 12 10:45:47 JST 2023
     */
    public OperationToManageExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ems.operation_to_manage
     *
     * @mbg.generated Sat Aug 12 10:45:47 JST 2023
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ems.operation_to_manage
     *
     * @mbg.generated Sat Aug 12 10:45:47 JST 2023
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ems.operation_to_manage
     *
     * @mbg.generated Sat Aug 12 10:45:47 JST 2023
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ems.operation_to_manage
     *
     * @mbg.generated Sat Aug 12 10:45:47 JST 2023
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ems.operation_to_manage
     *
     * @mbg.generated Sat Aug 12 10:45:47 JST 2023
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ems.operation_to_manage
     *
     * @mbg.generated Sat Aug 12 10:45:47 JST 2023
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ems.operation_to_manage
     *
     * @mbg.generated Sat Aug 12 10:45:47 JST 2023
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ems.operation_to_manage
     *
     * @mbg.generated Sat Aug 12 10:45:47 JST 2023
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ems.operation_to_manage
     *
     * @mbg.generated Sat Aug 12 10:45:47 JST 2023
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ems.operation_to_manage
     *
     * @mbg.generated Sat Aug 12 10:45:47 JST 2023
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ems.operation_to_manage
     *
     * @mbg.generated Sat Aug 12 10:45:47 JST 2023
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andOperationManageIdIsNull() {
            addCriterion("operation_manage_id is null");
            return (Criteria) this;
        }

        public Criteria andOperationManageIdIsNotNull() {
            addCriterion("operation_manage_id is not null");
            return (Criteria) this;
        }

        public Criteria andOperationManageIdEqualTo(Integer value) {
            addCriterion("operation_manage_id =", value, "operationManageId");
            return (Criteria) this;
        }

        public Criteria andOperationManageIdNotEqualTo(Integer value) {
            addCriterion("operation_manage_id <>", value, "operationManageId");
            return (Criteria) this;
        }

        public Criteria andOperationManageIdGreaterThan(Integer value) {
            addCriterion("operation_manage_id >", value, "operationManageId");
            return (Criteria) this;
        }

        public Criteria andOperationManageIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("operation_manage_id >=", value, "operationManageId");
            return (Criteria) this;
        }

        public Criteria andOperationManageIdLessThan(Integer value) {
            addCriterion("operation_manage_id <", value, "operationManageId");
            return (Criteria) this;
        }

        public Criteria andOperationManageIdLessThanOrEqualTo(Integer value) {
            addCriterion("operation_manage_id <=", value, "operationManageId");
            return (Criteria) this;
        }

        public Criteria andOperationManageIdIn(List<Integer> values) {
            addCriterion("operation_manage_id in", values, "operationManageId");
            return (Criteria) this;
        }

        public Criteria andOperationManageIdNotIn(List<Integer> values) {
            addCriterion("operation_manage_id not in", values, "operationManageId");
            return (Criteria) this;
        }

        public Criteria andOperationManageIdBetween(Integer value1, Integer value2) {
            addCriterion("operation_manage_id between", value1, value2, "operationManageId");
            return (Criteria) this;
        }

        public Criteria andOperationManageIdNotBetween(Integer value1, Integer value2) {
            addCriterion("operation_manage_id not between", value1, value2, "operationManageId");
            return (Criteria) this;
        }

        public Criteria andDiscriminateTableIdIsNull() {
            addCriterion("discriminate_table_id is null");
            return (Criteria) this;
        }

        public Criteria andDiscriminateTableIdIsNotNull() {
            addCriterion("discriminate_table_id is not null");
            return (Criteria) this;
        }

        public Criteria andDiscriminateTableIdEqualTo(Integer value) {
            addCriterion("discriminate_table_id =", value, "discriminateTableId");
            return (Criteria) this;
        }

        public Criteria andDiscriminateTableIdNotEqualTo(Integer value) {
            addCriterion("discriminate_table_id <>", value, "discriminateTableId");
            return (Criteria) this;
        }

        public Criteria andDiscriminateTableIdGreaterThan(Integer value) {
            addCriterion("discriminate_table_id >", value, "discriminateTableId");
            return (Criteria) this;
        }

        public Criteria andDiscriminateTableIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("discriminate_table_id >=", value, "discriminateTableId");
            return (Criteria) this;
        }

        public Criteria andDiscriminateTableIdLessThan(Integer value) {
            addCriterion("discriminate_table_id <", value, "discriminateTableId");
            return (Criteria) this;
        }

        public Criteria andDiscriminateTableIdLessThanOrEqualTo(Integer value) {
            addCriterion("discriminate_table_id <=", value, "discriminateTableId");
            return (Criteria) this;
        }

        public Criteria andDiscriminateTableIdIn(List<Integer> values) {
            addCriterion("discriminate_table_id in", values, "discriminateTableId");
            return (Criteria) this;
        }

        public Criteria andDiscriminateTableIdNotIn(List<Integer> values) {
            addCriterion("discriminate_table_id not in", values, "discriminateTableId");
            return (Criteria) this;
        }

        public Criteria andDiscriminateTableIdBetween(Integer value1, Integer value2) {
            addCriterion("discriminate_table_id between", value1, value2, "discriminateTableId");
            return (Criteria) this;
        }

        public Criteria andDiscriminateTableIdNotBetween(Integer value1, Integer value2) {
            addCriterion("discriminate_table_id not between", value1, value2, "discriminateTableId");
            return (Criteria) this;
        }

        public Criteria andOperationDateIsNull() {
            addCriterion("operation_date is null");
            return (Criteria) this;
        }

        public Criteria andOperationDateIsNotNull() {
            addCriterion("operation_date is not null");
            return (Criteria) this;
        }

        public Criteria andOperationDateEqualTo(Date value) {
            addCriterionForJDBCDate("operation_date =", value, "operationDate");
            return (Criteria) this;
        }

        public Criteria andOperationDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("operation_date <>", value, "operationDate");
            return (Criteria) this;
        }

        public Criteria andOperationDateGreaterThan(Date value) {
            addCriterionForJDBCDate("operation_date >", value, "operationDate");
            return (Criteria) this;
        }

        public Criteria andOperationDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("operation_date >=", value, "operationDate");
            return (Criteria) this;
        }

        public Criteria andOperationDateLessThan(Date value) {
            addCriterionForJDBCDate("operation_date <", value, "operationDate");
            return (Criteria) this;
        }

        public Criteria andOperationDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("operation_date <=", value, "operationDate");
            return (Criteria) this;
        }

        public Criteria andOperationDateIn(List<Date> values) {
            addCriterionForJDBCDate("operation_date in", values, "operationDate");
            return (Criteria) this;
        }

        public Criteria andOperationDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("operation_date not in", values, "operationDate");
            return (Criteria) this;
        }

        public Criteria andOperationDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("operation_date between", value1, value2, "operationDate");
            return (Criteria) this;
        }

        public Criteria andOperationDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("operation_date not between", value1, value2, "operationDate");
            return (Criteria) this;
        }

        public Criteria andOperatorIdIsNull() {
            addCriterion("operator_id is null");
            return (Criteria) this;
        }

        public Criteria andOperatorIdIsNotNull() {
            addCriterion("operator_id is not null");
            return (Criteria) this;
        }

        public Criteria andOperatorIdEqualTo(Integer value) {
            addCriterion("operator_id =", value, "operatorId");
            return (Criteria) this;
        }

        public Criteria andOperatorIdNotEqualTo(Integer value) {
            addCriterion("operator_id <>", value, "operatorId");
            return (Criteria) this;
        }

        public Criteria andOperatorIdGreaterThan(Integer value) {
            addCriterion("operator_id >", value, "operatorId");
            return (Criteria) this;
        }

        public Criteria andOperatorIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("operator_id >=", value, "operatorId");
            return (Criteria) this;
        }

        public Criteria andOperatorIdLessThan(Integer value) {
            addCriterion("operator_id <", value, "operatorId");
            return (Criteria) this;
        }

        public Criteria andOperatorIdLessThanOrEqualTo(Integer value) {
            addCriterion("operator_id <=", value, "operatorId");
            return (Criteria) this;
        }

        public Criteria andOperatorIdIn(List<Integer> values) {
            addCriterion("operator_id in", values, "operatorId");
            return (Criteria) this;
        }

        public Criteria andOperatorIdNotIn(List<Integer> values) {
            addCriterion("operator_id not in", values, "operatorId");
            return (Criteria) this;
        }

        public Criteria andOperatorIdBetween(Integer value1, Integer value2) {
            addCriterion("operator_id between", value1, value2, "operatorId");
            return (Criteria) this;
        }

        public Criteria andOperatorIdNotBetween(Integer value1, Integer value2) {
            addCriterion("operator_id not between", value1, value2, "operatorId");
            return (Criteria) this;
        }

        public Criteria andOperationTypeIdIsNull() {
            addCriterion("operation_type_id is null");
            return (Criteria) this;
        }

        public Criteria andOperationTypeIdIsNotNull() {
            addCriterion("operation_type_id is not null");
            return (Criteria) this;
        }

        public Criteria andOperationTypeIdEqualTo(Integer value) {
            addCriterion("operation_type_id =", value, "operationTypeId");
            return (Criteria) this;
        }

        public Criteria andOperationTypeIdNotEqualTo(Integer value) {
            addCriterion("operation_type_id <>", value, "operationTypeId");
            return (Criteria) this;
        }

        public Criteria andOperationTypeIdGreaterThan(Integer value) {
            addCriterion("operation_type_id >", value, "operationTypeId");
            return (Criteria) this;
        }

        public Criteria andOperationTypeIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("operation_type_id >=", value, "operationTypeId");
            return (Criteria) this;
        }

        public Criteria andOperationTypeIdLessThan(Integer value) {
            addCriterion("operation_type_id <", value, "operationTypeId");
            return (Criteria) this;
        }

        public Criteria andOperationTypeIdLessThanOrEqualTo(Integer value) {
            addCriterion("operation_type_id <=", value, "operationTypeId");
            return (Criteria) this;
        }

        public Criteria andOperationTypeIdIn(List<Integer> values) {
            addCriterion("operation_type_id in", values, "operationTypeId");
            return (Criteria) this;
        }

        public Criteria andOperationTypeIdNotIn(List<Integer> values) {
            addCriterion("operation_type_id not in", values, "operationTypeId");
            return (Criteria) this;
        }

        public Criteria andOperationTypeIdBetween(Integer value1, Integer value2) {
            addCriterion("operation_type_id between", value1, value2, "operationTypeId");
            return (Criteria) this;
        }

        public Criteria andOperationTypeIdNotBetween(Integer value1, Integer value2) {
            addCriterion("operation_type_id not between", value1, value2, "operationTypeId");
            return (Criteria) this;
        }

        public Criteria andMessageIsNull() {
            addCriterion("message is null");
            return (Criteria) this;
        }

        public Criteria andMessageIsNotNull() {
            addCriterion("message is not null");
            return (Criteria) this;
        }

        public Criteria andMessageEqualTo(String value) {
            addCriterion("message =", value, "message");
            return (Criteria) this;
        }

        public Criteria andMessageNotEqualTo(String value) {
            addCriterion("message <>", value, "message");
            return (Criteria) this;
        }

        public Criteria andMessageGreaterThan(String value) {
            addCriterion("message >", value, "message");
            return (Criteria) this;
        }

        public Criteria andMessageGreaterThanOrEqualTo(String value) {
            addCriterion("message >=", value, "message");
            return (Criteria) this;
        }

        public Criteria andMessageLessThan(String value) {
            addCriterion("message <", value, "message");
            return (Criteria) this;
        }

        public Criteria andMessageLessThanOrEqualTo(String value) {
            addCriterion("message <=", value, "message");
            return (Criteria) this;
        }

        public Criteria andMessageLike(String value) {
            addCriterion("message like", value, "message");
            return (Criteria) this;
        }

        public Criteria andMessageNotLike(String value) {
            addCriterion("message not like", value, "message");
            return (Criteria) this;
        }

        public Criteria andMessageIn(List<String> values) {
            addCriterion("message in", values, "message");
            return (Criteria) this;
        }

        public Criteria andMessageNotIn(List<String> values) {
            addCriterion("message not in", values, "message");
            return (Criteria) this;
        }

        public Criteria andMessageBetween(String value1, String value2) {
            addCriterion("message between", value1, value2, "message");
            return (Criteria) this;
        }

        public Criteria andMessageNotBetween(String value1, String value2) {
            addCriterion("message not between", value1, value2, "message");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ems.operation_to_manage
     *
     * @mbg.generated do_not_delete_during_merge Sat Aug 12 10:45:47 JST 2023
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ems.operation_to_manage
     *
     * @mbg.generated Sat Aug 12 10:45:47 JST 2023
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}